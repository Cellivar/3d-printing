
[extruder]
  step_pin  : ${orbitool_mcu_name}:DRIVER0_STEP
  dir_pin   : ${orbitool_mcu_name}:DRIVER0_DIR
  enable_pin: !${orbitool_mcu_name}:DRIVER0_EN
  heater_pin: ${orbitool_mcu_name}:HEATER

  # BMG kit repackaged in 'Roundhouse' extruder
  # https://github.com/chirpy2605/voron/tree/main/general/RoundHouse
  rotation_distance: 4.5
  microsteps       : 16

  sensor_pin     : ${orbitool_mcu_name}:TEMP
  sensor_type    : ATC Semitec 104NT-4-R025H42G # 60w/40w Revo Hotend
  pullup_resistor: 2200
  control = pid
  pid_Kp  = 32.049
  pid_Ki  = 4.547
  pid_Kd  = 56.469

  # Avoid tripping safety system
  max_power = 0.995
  # Higher pwm cycle for hardware support
  pwm_cycle_time: 0.00500

  min_temp        : 0
  min_extrude_temp: 160
  max_temp        : 290
  max_extrude_only_distance: 500
  max_extrude_cross_section: 20

  pressure_advance: 0.035

  nozzle_diameter  : 0.400
  filament_diameter: 1.750

[tmc2209 extruder]
  uart_pin   : ${orbitool_mcu_name}:DRIVER0_UART
  interpolate: False
  stealthchop_threshold: 0

  # BTT TMC2209 v1.3 uses a 0.110Ohm RSENSE value
  sense_resistor: 0.110

  # Fysetc 1.8 degree G36HSY4405-6D-1200
  # 1A max, 2.4Ohm, 1.7mH
  # https://github.com/MakerBogans/docs/wiki/TMC-Driver-Tuning
  run_current : 0.707
  driver_TBL  : 1
  driver_TOFF : 3
  driver_HSTRT: 7
  driver_HEND : 9

[fan]
  pin: ${orbitool_mcu_name}:FAN

  # Avoid tripping safety system
  max_power: 0.995
  cycle_time: 0.02

  off_below      : 0.13
  shutdown_speed : 0.0
  kick_start_time: 0.5
  hardware_pwm   : False

[heater_fan hotend_fan]
  pin        : !${orbitool_mcu_name}:HOTEND_FAN
  heater     : extruder
  heater_temp: 75.0

  # Up to 0.995 to avoid tripping safety.
  # Tweaked lower for noise, too low will cause clogs.
  max_power : 0.7
  cycle_time: 0.0001 #10KHz PWM frequency

  off_below      : 0.13
  shutdown_speed : 0.0
  kick_start_time: 0.5
  hardware_pwm   : False

[firmware_retraction] # TODO: Tune!
  retract_length        : 1
  retract_speed         : 25
  unretract_extra_length: 0
  unretract_speed       : 5

[lis2dw]
  cs_pin  : ${orbitool_mcu_name}:LIS2DW_CS
  spi_bus : spi1
  axes_map: y, z, x

[resonance_tester]
  accel_chip: lis2dw
  probe_points: 100,150,30  # XYZ head position for testing
  min_freq: 10
  max_freq: 200

# TODO: Calibrate
# [input_shaper]
#   shaper_freq_x : 54.2
#   shaper_type_x : mzv
#   shaper_freq_y : 43.2
#   shaper_type_y : 2hump_ei

################################################################################
## Toolhead Selection Macros

[gcode_macro T0]
  description: Activate extruder 0
  # variable_mixing_steppers  : ['extruder']
  # variable_mixing_ratios    : [1.0]
  variable_spool_id: None
  gcode:
    SET_ACTIVE_SPOOL ID={ printer['gcode_macro T0'].spool_id }
    #_ACTIVATE_TOOL P=0

# Variables for additional macros and M-commands
[gcode_macro _EXTENDED_GCODE_COMMANDS]
  description: Configuration for custom gcode command overrides, for additional features.

  # Config for PURGE_LINE
  variable_purgeline_start_x      = 209 # X position of start of purge line
  variable_purgeline_start_y      = -1 # Y position of start of purge line
  variable_purgeline_length       = 40 # Length of line, along X axis towards center.
  variable_purgeline_purge_speed  = 1200
  variable_purgeline_travel_speed = 60000

  # Configure the mapping of fan_generic to P parameters for M106
  # This lets your slicer emit 'M106 P3 S255' style commands for chamber cooling
  # Make sure the list includes up to the index you intend to use!
  variable_fan_list = [
    ''] # P0, leave blank for default [fan].

  # Load and unload filament macros
  variable_load_length       = 30 # Distance to load quickly
  variable_load_speed        = 1000
  variable_load_purge_length = 90 # Distance to purge through the nozzle to clear it
  variable_load_purge_speed  = 300
  variable_load_unload_extra = 25 # Additional unload distance, just to be safe

  gcode:

################################################################################
## Probe

[probe_eddy_current btt_eddy]
  sensor_type: ldc1612
  i2c_mcu    : ${eddy_mcu_name}
  i2c_bus    : i2c0f
  # The 20mm calibration will often suggest one lower than what this should be at
  # Bump it by 1 if you encounter problems probing.
  reg_drive_current: 17

  z_offset  : 0.5 # Distance from bed probe should 'trigger' at.
  y_offset  : 033
  x_offset  : -21
  speed     : 10
  lift_speed: 30

  samples                  : 3
  samples_result           : median
  sample_retract_dist      : 3.0
  samples_tolerance        : 0.100
  samples_tolerance_retries: 5

[temperature_probe btt_eddy]
  sensor_type      : Generic 3950
  sensor_pin       : ${eddy_mcu_name}:gpio26
  horizontal_move_z: 2

  speed: 200

  calibration_position: 100, 150, 2
  calibration_bed_temp: 70
  calibration_extruder_temp: 170

[bed_mesh]
  horizontal_move_z: 2
  speed: 50
  # For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
  # mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
  # mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
  # mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
  # mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
  # Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
  # For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
  # For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
  # For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
  # For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
  # The final result would be mesh_min: 15, 15 mesh_max: 280, 285
  mesh_min   : 50,  35
  mesh_max   : 188, 250
  probe_count: 14, 21
  algorithm  : bicubic
