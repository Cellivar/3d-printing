
################################################################################
## Extruders and Toolhead

# TODO: Calibrate
# [input_shaper]
#   shaper_freq_x = 54.2
#   shaper_type_x = mzv
#   shaper_freq_y = 43.2
#   shaper_type_y = 2hump_ei

[extruder]
  step_pin   = DRIVER_E0_STEP
  dir_pin    = DRIVER_E0_DIR
  enable_pin = DRIVER_E0_EN
  microsteps = 16

  # Fysetc 1.8 degree G36HSY4405-6D-1200
  full_steps_per_rotation = 200

  # BMG kit repackaged in 'Roundhouse' extruder
  # https://github.com/chirpy2605/voron/tree/main/general/RoundHouse
  rotation_distance       = 7.710843373

  nozzle_diameter   = 0.400
  filament_diameter = 1.750

  heater_pin  = kehead:M1
  sensor_pin  = kehead:T0
  sensor_type = ATC Semitec 104NT-4-R025H42G # 60w/40w Revo Hotend
  control = pid
  pid_Kp  = 32.049
  pid_Ki  = 4.547
  pid_Kd  = 56.469

  min_temp         = -100
  min_extrude_temp = 0 # TODO: Fix settings after testing
  max_temp         = 3320
  max_extrude_cross_section = 20
  max_extrude_only_distance = 200

  # TODO: Tune!
  # pressure_advance              = 0.2

[tmc2209 extruder]
  uart_pin: DRIVER_E0_CS
  interpolate: False
  stealthchop_threshold: 0

  # BTT TMC2209 v1.3 uses a 0.110Ohm RSENSE value
  sense_resistor: 0.110

  # Fysetc 1.8 degree G36HSY4405-6D-1200
  # 1A max, 2.4Ohm, 1.7mH
  # https://github.com/MakerBogans/docs/wiki/TMC-Driver-Tuning
  run_current : 0.566
  driver_TBL  : 1
  driver_TOFF : 3
  driver_HSTRT: 7
  driver_HEND : 8

# Part cooling fan output, controllable. The hotend fans are not.
[fan]
  pin = kehead:M3 # TODO: Double check!

  off_below: 0.13
  kick_start_time: 0.5

[heater_fan hotend_fan]
  pin        : kehead:M0
  heater     : extruder
  heater_temp: 50.0

  off_below      : 0.13
  kick_start_time: 0.5

[firmware_retraction] # TODO: Tune!
  retract_length         = 1
  retract_speed          = 20
  unretract_extra_length = 0
  unretract_speed        = 10

################################################################################
## Toolhead Selection Macros

[gcode_macro T0]
  description = Activate Extruder 1
  variable_mixing_steppers  = ['extruder']
  variable_mixing_ratios    = [1.0]
  variable_spool_id         = None
  gcode =
    SET_ACTIVE_SPOOL ID={ printer['gcode_macro T0'].spool_id }
    _ACTIVATE_TOOL P=0

# Variables for additional macros and M-commands
[gcode_macro _EXTENDED_GCODE_COMMANDS]
  description: Configuration for custom gcode command overrides, for additional features.

  # Config for PURGE_LINE
  variable_purgeline_start_x      = 209 # X position of start of purge line
  variable_purgeline_start_y      = 305 # Y position of start of purge line
  variable_purgeline_length       = 40 # Length of line, along X axis towards center.
  variable_purgeline_purge_speed  = 1200
  variable_purgeline_travel_speed = 7000

  # Configure the mapping of fan_generic to P parameters for M106
  # This lets your slicer emit 'M106 P3 S255' style commands for chamber cooling
  # Make sure the list includes up to the index you intend to use!
  variable_fan_list = [
    ''] # P0, leave blank for default [fan].

  # Load and unload filament macros
  variable_load_length  = 25 # Distance to load quickly
  variable_load_speed  = 1000
  variable_load_purge_length = 25 # Distance to purge through the nozzle to clear it
  variable_load_purge_speed  = 300
  variable_load_unload_extra = 25 # Additional unload distance, just to be safe

  gcode:

################################################################################
## Probe

[probe_eddy_current btt_eddy]
  sensor_type: ldc1612
  z_offset   : 2.5
  i2c_mcu    : kehead
  i2c_bus    : i2c1a
  x_offset: 21
  y_offset: 33

[bed_mesh]
  horizontal_move_z: 2
  speed: 200
  # For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
  # mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
  # mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
  # mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
  # mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
  # Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
  # For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
  # For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
  # For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
  # For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
  # The final result would be mesh_min: 15, 15 mesh_max: 280, 285
  mesh_min: 20,  0
  mesh_max: 175, 275
  probe_count: 9, 9
  algorithm: bicubic

[gcode_macro CALIBRATE_EDDY]
gcode:
  BED_MESH_CLEAR
  G90
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  G0 Z2 F1000
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}
