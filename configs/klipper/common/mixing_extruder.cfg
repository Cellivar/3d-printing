
[gcode_macro _PAUSE_MIXING_EXTRUDER]
  description: Pause multiple toolheads
  gcode =
    {% set restore_macro = printer['gcode_macro _RESUME_MIXING_EXTRUDER'] %}
    {% set active_tool = printer['gcode_macro _ACTIVATE_TOOL'].active_tool %}
    {% set tool_macro = printer['gcode_macro T%s' % active_tool] %}

    {% set temps = [] %}
    {% for t in tool_macro.mixing_steppers %}
      {% set val = {'heater': t, 'target': printer[t].target} %}
      {% set _ = temp_mix.append(val) %}
    {% endfor %}

    SET_GCODE_VARIABLE MACRO=_RESUME_MIXING_EXTRUDER VARIABLE=last_extruder_temp VALUE="{temp_mix | pprint | replace("\n", "") | replace("\"", "\\\"")}"

[gcode_macro _RESUME_MIXING_EXTRUDER]
  description: Resume multiple toolheads
  variable_last_extruder_temps = [] # like [{'heater': 'extruder', 'target': '200'}]
  gcode =
    {% if last_extruder_temp|length > 0 %}
      {% set active_tool = printer['gcode_macro _ACTIVATE_TOOL'].active_tool %}
      {% set tool_macro = printer['gcode_macro T%s' % active_tool] %}
      # First set all the temperatures so they all warm up together
      {% for tstate in last_extruder_temp %}
        {% if tstate['heater'] == 'extruder' %}
          M104 T0 S{tstate['target']}
        {% else %}
          M104 T{tstate['heater']|replace('extruder', '')} S{tstate['target']}
        {% endif %}
      {% endfor %}

      M117 Reheating...
      RESPOND TYPE=echo MSG='Restoring extruders to temperature, this may take a moment.'

      # Next actually wait for them to come to temp.
      {% for tstate in last_extruder_temp %}
        {% if tstate['heater'] == 'extruder' %}
          M109 T0 S{tstate['target']}
        {% else %}
          M109 T{tstate['heater']|replace('extruder', '')} S{tstate['target']}
        {% endif %}
      {% endfor %}
    {% endif %}

    SET_GCODE_VARIABLE MACRO=_RESUME_MIXING_EXTRUDER VARIABLE=last_extruder_temp VALUE="[]x"

[gcode_macro M567]
  description = Set tool mix ratios
  # https://reprap.org/wiki/G-code#M567:_Set_tool_mix_ratios
  # M567 P2 E0.25:0.75

  gcode =
    # P parameter: Specify the tool to apply ratios to.
    # Default to the currently active tool.
    {% set tool = params.P | replace('=', '') | default(printer['gcode_macro _ACTIVATE_TOOL'].active_tool) | int %}
    # Confirm the tool actually, you know, exists.
    {% if not printer['gcode_macro T%s' % tool] %}
      { action_raise_error('Macro T%s not found.' % tool) }
    {% endif %}
    {% set tool_macro = printer['gcode_macro T%s' % tool] %}

    # E parameter: Colon-delimeted movement ratios for each stepper.
    # E0.25:0.75 will extrude 25% via the first extruder, 75% through the second
    # Doesn't need to add up to 100%, but that will be weird.
    # Can't add up to more than 100%, that would break things.
    # If the values provided are less than steppers the remaining are set to 0.
    # Last note, Klipper wants E0.5 style, some tools will do E=0.5. Strip the =
    {% set raw_ratios = params.E | default('1') | replace('=', '') %}
    {% set ratios = raw_ratios.split(':') %}
    {% set new_ratios = [] %}
    {% for t in tool_macro.mixing_steppers %}
      {% set ratio = 0 if loop.index > (ratios | length) else (ratios[loop.index0] | float) %}
      {% set _ = new_ratios.append(ratio) %}
    {% endfor %}

    # RESPOND TYPE=echo MSG="Setting ratios for T{tool} to {new_ratios | pprint | replace("\n", "") | replace("\"", "\\\"")}"
    SET_GCODE_VARIABLE MACRO=T{tool} VARIABLE=mixing_ratios VALUE="{new_ratios | pprint | replace("\n", "") | replace("\"", "\\\"")}"

    # If we just modified the active tool we'll need to re-activate it.
    {% if tool == printer['gcode_macro _ACTIVATE_TOOL'].active_tool %}
      _ACTIVATE_TOOL P={tool}
    {% endif %}

[gcode_macro _ACTIVATE_TOOL]
  description = Apply the config for a tool
  variable_active_tool = 0
  gcode =
    {% set tool = params.P | default(active_tool) | int %}
    {% if not printer['gcode_macro T%s' % tool] %}
      { action_raise_error('Macro T%s not found to activate' % tool) }
    {% endif %}
    {% set tool_macro = printer['gcode_macro T%s' % tool] %}
    {% set lead_extruder = tool_macro.mixing_steppers | first %}

    # Sanity check: Greater than 100% ratio doesn't make sense.
    {% if ((tool_macro.mixing_ratios | sum()) > 1.0) %}
      { action_raise_error('Mixing ratios for T%s add up to over 1.0, currently: %s' % (tool, tool_macro.mixing_ratios)) }
    {% endif %}

    # Set up the lead extruder
    SET_GCODE_VARIABLE MACRO=_ACTIVATE_TOOL VARIABLE=active_tool VALUE={tool}
    ACTIVATE_EXTRUDER EXTRUDER={lead_extruder}

    # Now set up all of the ratios for the group
    {% for t in tool_macro.mixing_steppers %}
      {% set ratio = [[0, tool_macro.mixing_ratios[loop.index0]] | max, 1] | min %}
      {% set queue = lead_extruder if ratio > 0 else '' %}
      {% set ratio = ratio if queue != '' else 1 %} # Zero rotation distance isn't allowed
      {% set distance = printer.configfile.settings[t].rotation_distance / ratio %}
      SYNC_EXTRUDER_MOTION EXTRUDER={t} MOTION_QUEUE={queue}
      SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER={t} DISTANCE={distance}
    {% endfor %}
